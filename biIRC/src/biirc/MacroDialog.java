/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package biirc;

import java.io.File;
import java.io.FileFilter;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.xml.parsers.DocumentBuilderFactory;
import org.w3c.dom.Document;

/**
 *
 * @author nihanth
 */
public class MacroDialog extends javax.swing.JDialog {

    private java.awt.Frame mParent;
    DefaultListModel mMacroListModel = new DefaultListModel();
    File macroDir = new File(System.getProperty("user.home")
            + System.getProperty("file.separator")
            + "biIRC" + System.getProperty("file.separator")
            + "Macros");

    /** Creates new form MacroDialog */
    public MacroDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        mParent = parent;
        initComponents();
        reloadMacroList();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        macroList = new javax.swing.JList(mMacroListModel);
        jPanel2 = new javax.swing.JPanel();
        editBtn = new javax.swing.JButton();
        newBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        doneBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setModal(true);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Available Macros");

        jScrollPane2.setViewportView(macroList);

        editBtn.setText("Edit");
        editBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBtnActionPerformed(evt);
            }
        });

        newBtn.setText("New");
        newBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newBtnActionPerformed(evt);
            }
        });

        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        doneBtn.setText("Done");
        doneBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doneBtnActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(newBtn, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(deleteBtn, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, doneBtn, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, editBtn, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(newBtn)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(editBtn)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(deleteBtn)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(doneBtn))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .add(jLabel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel2)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void newBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newBtnActionPerformed
        new MacroEditor(mParent).setVisible(true);
        reloadMacroList();
    }//GEN-LAST:event_newBtnActionPerformed

    private void doneBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doneBtnActionPerformed
        dispose();
    }//GEN-LAST:event_doneBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        if (macroList.getSelectedIndex() == -1) return;
        try {
            File f = new File(macroDir.getCanonicalPath()
                    + System.getProperty("file.separator")
                    + macroList.getSelectedValue().toString()
                    + ".xml");
            boolean del = JOptionPane.showConfirmDialog(this, "Really delete?", "Confirm delete",
                    JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION;
            if (del) {
                f.delete();
                reloadMacroList();
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void editBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBtnActionPerformed
        if (macroList.getSelectedIndex() == -1) return;
        try {
            File f = new File(macroDir.getCanonicalPath()
                    + System.getProperty("file.separator")
                    + macroList.getSelectedValue().toString()
                    + ".xml");
            new MacroEditor(mParent, f).setVisible(true);
            reloadMacroList();
        } catch (Exception e) {
            e.printStackTrace(System.out);
        }
    }//GEN-LAST:event_editBtnActionPerformed

    private void reloadMacroList() {
        mMacroListModel.removeAllElements();
        File[] macroFiles = macroDir.listFiles(new FileFilter() {

            @Override
            public boolean accept(File f) {
                if (f.getName().endsWith(".xml"))
                    try {
                        Document doc = DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(
                                f);
                        return doc.getDocumentElement().getNodeName().equals("biirc-macro");
                    } catch (Exception e) {
                    }
                return false;
            }
        });
        for (File f : macroFiles) {
            mMacroListModel.addElement(f.getName().replaceFirst("[.][^.]+$", ""));
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton deleteBtn;
    private javax.swing.JButton doneBtn;
    private javax.swing.JButton editBtn;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList macroList;
    private javax.swing.JButton newBtn;
    // End of variables declaration//GEN-END:variables
}
