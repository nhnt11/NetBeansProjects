/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MainApp.java
 *
 * Created on Apr 22, 2009, 11:24:16 AM
 */
package NCoder;

import javax.swing.JOptionPane;
import javax.swing.UIManager;

/**
 *
 * @author Nihanth
 */
public class MainApp extends javax.swing.JFrame {

    int timeout = 0;

    /** Creates new form MainApp */
    public MainApp() {
        try {
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.nimbus.NimbusLookAndFeel");
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        initComponents();
        pack();
        NCoder.generateTable();
        keyField.selectAll();
        keyField.requestFocus();
        System.out.println(getHeight());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        tabbedPane = new javax.swing.JTabbedPane();
        encoderPanel = new javax.swing.JPanel();
        EclrTxtLbl = new javax.swing.JLabel();
        EclrTxtSP = new javax.swing.JScrollPane();
        EclearTxt = new javax.swing.JTextArea();
        EcodeTxtLbl = new javax.swing.JLabel();
        EcodeTxtSP = new javax.swing.JScrollPane();
        EcodeTxt = new javax.swing.JTextArea();
        EcopyBtn = new javax.swing.JButton();
        EpasteBtn = new javax.swing.JButton();
        decoderPanel = new javax.swing.JPanel();
        EclrTxtSP1 = new javax.swing.JScrollPane();
        DcodeTxt = new javax.swing.JTextArea();
        DcodeTxtLbl = new javax.swing.JLabel();
        DclearTxtLbl = new javax.swing.JLabel();
        EcodeTxtSP1 = new javax.swing.JScrollPane();
        DclearTxt = new javax.swing.JTextArea();
        DcopyBtn = new javax.swing.JButton();
        DpasteBtn = new javax.swing.JButton();
        keyField = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        fileExit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        helpAbout = new javax.swing.JMenuItem();

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("NCoder");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        encoderPanel.setPreferredSize(new java.awt.Dimension(424, 270));

        EclrTxtLbl.setFont(new java.awt.Font("Tahoma", 1, 14));
        EclrTxtLbl.setText("Enter cleartext:");

        EclearTxt.setColumns(20);
        EclearTxt.setFont(new java.awt.Font("Tahoma", 0, 13));
        EclearTxt.setLineWrap(true);
        EclearTxt.setRows(5);
        EclearTxt.setTabSize(5);
        EclearTxt.setWrapStyleWord(true);
        EclearTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                EclearTxtFocusGained(evt);
            }
        });
        EclearTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                EclearTxtKeyReleased(evt);
            }
        });
        EclrTxtSP.setViewportView(EclearTxt);

        EcodeTxtLbl.setFont(new java.awt.Font("Tahoma", 1, 14));
        EcodeTxtLbl.setText("Codetext:");

        EcodeTxt.setColumns(20);
        EcodeTxt.setEditable(false);
        EcodeTxt.setFont(new java.awt.Font("Tahoma", 0, 13));
        EcodeTxt.setLineWrap(true);
        EcodeTxt.setRows(5);
        EcodeTxt.setTabSize(5);
        EcodeTxt.setWrapStyleWord(true);
        EcodeTxt.setMaximumSize(new java.awt.Dimension(232, 92));
        EcodeTxt.setMinimumSize(new java.awt.Dimension(232, 92));
        EcodeTxtSP.setViewportView(EcodeTxt);

        EcopyBtn.setText("Copy");
        EcopyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EcopyBtnActionPerformed(evt);
            }
        });

        EpasteBtn.setText("Paste");
        EpasteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EpasteBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout encoderPanelLayout = new javax.swing.GroupLayout(encoderPanel);
        encoderPanel.setLayout(encoderPanelLayout);
        encoderPanelLayout.setHorizontalGroup(
            encoderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(encoderPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(encoderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(encoderPanelLayout.createSequentialGroup()
                        .addComponent(EclrTxtLbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 245, Short.MAX_VALUE)
                        .addComponent(EpasteBtn))
                    .addGroup(encoderPanelLayout.createSequentialGroup()
                        .addComponent(EcodeTxtLbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 287, Short.MAX_VALUE)
                        .addComponent(EcopyBtn))
                    .addComponent(EclrTxtSP, javax.swing.GroupLayout.DEFAULT_SIZE, 412, Short.MAX_VALUE)
                    .addComponent(EcodeTxtSP, javax.swing.GroupLayout.DEFAULT_SIZE, 412, Short.MAX_VALUE))
                .addContainerGap())
        );
        encoderPanelLayout.setVerticalGroup(
            encoderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(encoderPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(encoderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EclrTxtLbl)
                    .addComponent(EpasteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(EclrTxtSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(encoderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EcodeTxtLbl)
                    .addComponent(EcopyBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(EcodeTxtSP, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        tabbedPane.addTab("Encoder", encoderPanel);

        decoderPanel.setPreferredSize(new java.awt.Dimension(424, 270));

        DcodeTxt.setColumns(20);
        DcodeTxt.setFont(new java.awt.Font("Tahoma", 0, 13));
        DcodeTxt.setLineWrap(true);
        DcodeTxt.setRows(5);
        DcodeTxt.setTabSize(5);
        DcodeTxt.setWrapStyleWord(true);
        DcodeTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                DcodeTxtFocusGained(evt);
            }
        });
        DcodeTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                DcodeTxtKeyReleased(evt);
            }
        });
        EclrTxtSP1.setViewportView(DcodeTxt);

        DcodeTxtLbl.setFont(new java.awt.Font("Tahoma", 1, 14));
        DcodeTxtLbl.setText("Enter codetext:");

        DclearTxtLbl.setFont(new java.awt.Font("Tahoma", 1, 14));
        DclearTxtLbl.setText("Cleartext:");

        DclearTxt.setColumns(20);
        DclearTxt.setEditable(false);
        DclearTxt.setFont(new java.awt.Font("Tahoma", 0, 13));
        DclearTxt.setLineWrap(true);
        DclearTxt.setRows(5);
        DclearTxt.setTabSize(5);
        DclearTxt.setWrapStyleWord(true);
        EcodeTxtSP1.setViewportView(DclearTxt);

        DcopyBtn.setText("Copy");
        DcopyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DcopyBtnActionPerformed(evt);
            }
        });

        DpasteBtn.setText("Paste");
        DpasteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DpasteBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout decoderPanelLayout = new javax.swing.GroupLayout(decoderPanel);
        decoderPanel.setLayout(decoderPanelLayout);
        decoderPanelLayout.setHorizontalGroup(
            decoderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(decoderPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(decoderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(EclrTxtSP1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 412, Short.MAX_VALUE)
                    .addComponent(EcodeTxtSP1, javax.swing.GroupLayout.DEFAULT_SIZE, 412, Short.MAX_VALUE)
                    .addGroup(decoderPanelLayout.createSequentialGroup()
                        .addComponent(DcodeTxtLbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 244, Short.MAX_VALUE)
                        .addComponent(DpasteBtn))
                    .addGroup(decoderPanelLayout.createSequentialGroup()
                        .addComponent(DclearTxtLbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 288, Short.MAX_VALUE)
                        .addComponent(DcopyBtn)))
                .addContainerGap())
        );
        decoderPanelLayout.setVerticalGroup(
            decoderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(decoderPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(decoderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DcodeTxtLbl)
                    .addComponent(DpasteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(EclrTxtSP1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(decoderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DclearTxtLbl)
                    .addComponent(DcopyBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(EcodeTxtSP1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        tabbedPane.addTab("Decoder", decoderPanel);

        getContentPane().add(tabbedPane, java.awt.BorderLayout.CENTER);

        keyField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        keyField.setText("Enter key...");
        keyField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                keyFieldFocusLost(evt);
            }
        });
        getContentPane().add(keyField, java.awt.BorderLayout.SOUTH);
        keyField.requestFocus();

        jMenu1.setText("File");

        fileExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        fileExit.setText("Exit");
        fileExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileExitActionPerformed(evt);
            }
        });
        jMenu1.add(fileExit);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Help");

        helpAbout.setText("About...");
        helpAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpAboutActionPerformed(evt);
            }
        });
        jMenu2.add(helpAbout);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void EclearTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_EclearTxtKeyReleased
        // TODO add your handling code here:
        EcodeTxt.setText(NCoder.encode(EclearTxt.getText(), keyField.getText()));
}//GEN-LAST:event_EclearTxtKeyReleased

    private void DcodeTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DcodeTxtKeyReleased
        // TODO add your handling code here:
        DclearTxt.setText(NCoder.decode(DcodeTxt.getText(), keyField.getText()));
    }//GEN-LAST:event_DcodeTxtKeyReleased

    private void EclearTxtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_EclearTxtFocusGained
        // TODO add your handling code here:
        if (timeout != 0) return;
        timeout = 1;
        String key = keyField.getText();
        if (key.equals("")) {
            JOptionPane.showMessageDialog(this, "Invalid key.");
        } else if (key.length() < 5) {
            JOptionPane.showMessageDialog(this, "Please use a key with more than 5 characters for optimal encryption.");
        } else if (key.split("" + key.charAt(0)).length == 0) {
            JOptionPane.showMessageDialog(this, "Please do not use a repeated character as a key: This is as good as a single - letter key.");
        } else {
            EcodeTxt.setText(NCoder.encode(EclearTxt.getText(), keyField.getText()));
        }
        new Thread(new Runnable() {

            @Override
            public void run() {
                try {
                    Thread.sleep(200);
                } catch (InterruptedException ex) {
                    ex.printStackTrace();
                }
                if (keyField.getText().equals("") || keyField.getText().split("" + keyField.getText().charAt(0)).length == 0 || keyField.getText().length() < 5) {
                    keyField.requestFocusInWindow();
                }
                timeout = 0;
            }
        }).start();
    }//GEN-LAST:event_EclearTxtFocusGained

    private void keyFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_keyFieldFocusLost
        // TODO add your handling code here:
        EcodeTxt.setText(NCoder.encode(EclearTxt.getText(), keyField.getText()));
        DclearTxt.setText(NCoder.decode(DcodeTxt.getText(), keyField.getText()));
    }//GEN-LAST:event_keyFieldFocusLost

    private void DcopyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DcopyBtnActionPerformed
        // TODO add your handling code here:
        DclearTxt.selectAll();
        DclearTxt.copy();
        DclearTxt.select(0, 0);
        DcodeTxt.requestFocusInWindow();
}//GEN-LAST:event_DcopyBtnActionPerformed

    private void EcopyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EcopyBtnActionPerformed
        // TODO add your handling code here:
        EcodeTxt.selectAll();
        EcodeTxt.copy();
        EcodeTxt.select(0, 0);
        EclearTxt.requestFocusInWindow();
    }//GEN-LAST:event_EcopyBtnActionPerformed

    private void EpasteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EpasteBtnActionPerformed
        // TODO add your handling code here:
        EclearTxt.selectAll();
        EclearTxt.paste();
        EclearTxt.requestFocusInWindow();
}//GEN-LAST:event_EpasteBtnActionPerformed

    private void DpasteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DpasteBtnActionPerformed
        // TODO add your handling code here:
        DcodeTxt.selectAll();
        DcodeTxt.paste();
        DcodeTxt.requestFocusInWindow();
    }//GEN-LAST:event_DpasteBtnActionPerformed

    private void DcodeTxtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_DcodeTxtFocusGained
        // TODO add your handling code here:
        DclearTxt.setText(NCoder.decode(DcodeTxt.getText(), keyField.getText()));
    }//GEN-LAST:event_DcodeTxtFocusGained

    private void helpAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpAboutActionPerformed
        // TODO add your handling code here:
        new AboutDialog(this, true);
}//GEN-LAST:event_helpAboutActionPerformed

    private void fileExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileExitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_fileExitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new MainApp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea DclearTxt;
    private javax.swing.JLabel DclearTxtLbl;
    private javax.swing.JTextArea DcodeTxt;
    private javax.swing.JLabel DcodeTxtLbl;
    private javax.swing.JButton DcopyBtn;
    private javax.swing.JButton DpasteBtn;
    private javax.swing.JTextArea EclearTxt;
    private javax.swing.JLabel EclrTxtLbl;
    private javax.swing.JScrollPane EclrTxtSP;
    private javax.swing.JScrollPane EclrTxtSP1;
    private javax.swing.JTextArea EcodeTxt;
    private javax.swing.JLabel EcodeTxtLbl;
    private javax.swing.JScrollPane EcodeTxtSP;
    private javax.swing.JScrollPane EcodeTxtSP1;
    private javax.swing.JButton EcopyBtn;
    private javax.swing.JButton EpasteBtn;
    private javax.swing.JPanel decoderPanel;
    private javax.swing.JPanel encoderPanel;
    private javax.swing.JMenuItem fileExit;
    private javax.swing.JMenuItem helpAbout;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField keyField;
    private javax.swing.JTabbedPane tabbedPane;
    // End of variables declaration//GEN-END:variables
}
